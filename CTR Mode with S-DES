#include <stdio.h>

typedef unsigned char u8;
typedef unsigned short u16;

// Simulated S-DES encryption: XOR with lower 8 bits of the key
u8 sdes_encrypt(u8 b, u16 key) {
    return b ^ (key & 0xFF);
}

// CTR Mode: same function for encryption and decryption
void ctr_mode(u8 *in, u8 *out, u8 ctr, u16 key, int n) {
    for (int i = 0; i < n; i++) {
        u8 ks = sdes_encrypt(ctr++, key);
        out[i] = in[i] ^ ks;
    }
}

// Print utility
void print_bytes(const char *label, u8 *data, int len) {
    printf("%s: ", label);
    for (int i = 0; i < len; i++) printf("%02X ", data[i]);
    printf("\n");
}

int main() {
    u8 plaintext[3] = {0x01, 0x02, 0x04};  // 00000001 00000010 00000100
    u8 ciphertext[3], decrypted[3];
    u8 counter = 0x00;                    // Start counter at 0
    u16 key = 0x0FD;                      // 0111111101

    // Encrypt
    ctr_mode(plaintext, ciphertext, counter, key, 3);
    print_bytes("Ciphertext", ciphertext, 3);

    // Decrypt (same as encryption)
    ctr_mode(ciphertext, decrypted, counter, key, 3);
    print_bytes("Decrypted", decrypted, 3);

    return 0;
}
